%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 33 73 562 769 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: golf elements 08.eps
%%CreationDate: Wed May 09 13:25:31 2012
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE Trans. White)
%%+ (PANTONE Hexachrome Black C)
%%CMYKCustomColor: 0 0 0 0 (PANTONE Trans. White)
%%+ 0.01 0.01 0.01 1 (PANTONE Hexachrome Black C)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.739
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
41.98791 80.73865 554.41049 760.25282 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 (PANTONE Trans. White) ] set_fill_color
196.82249 245.11039 m
185.64605 244.90885 179.17597 249.41849 169.54214 250.76409 C
177.37625 255.05376 185.78183 258.77140 193.62501 263.05172 C
195.22857 257.60409 195.86126 251.19524 196.82249 245.11039 C
@c
552.69836 156.63146 m
555.53017 148.60063 555.00009 137.08687 549.99326 131.31581 C
544.74265 125.26328 536.54315 122.00031 530.33131 116.57140 C
526.95609 113.61345 523.49613 110.99254 520.01291 108.21260 C
513.02296 102.64309 506.62828 96.70337 499.85717 91.50435 C
499.58957 112.71317 493.24677 127.20869 484.86472 140.90287 C
482.31439 145.07065 478.70872 150.37739 477.73871 155.15461 C
475.37121 166.78120 481.44699 171.00992 488.54948 175.06517 C
495.31465 178.92340 501.16507 181.55339 510.42557 182.19090 C
532.43178 183.70998 547.13820 172.40230 552.69836 156.63146 C
@c
493.46731 105.51231 m
494.71427 98.19411 495.58592 86.35181 491.74668 82.90148 C
487.11487 78.73370 471.59235 81.64517 464.21802 82.90148 C
401.89465 93.50589 344.88198 109.90970 291.93477 130.33587 C
276.44060 136.31329 262.28239 142.79669 248.18967 149.50545 C
234.13521 156.19550 220.17373 162.81496 206.16094 170.14734 C
186.23197 180.57827 164.21669 190.98595 155.77795 214.14047 C
153.68655 219.88346 150.33487 234.02268 153.81354 240.93326 C
155.17786 243.64743 157.49320 245.57896 161.92403 245.84627 C
173.11890 246.52148 181.21096 241.26123 191.90438 240.19228 C
194.75490 239.91109 198.23811 240.12198 200.99934 239.70019 C
206.46539 238.87049 211.08841 236.59654 215.49969 234.54312 C
221.53805 231.73030 227.73118 226.93436 236.63849 229.13320 C
238.18989 229.51757 240.00406 230.26309 241.55178 231.10214 C
242.87811 231.81931 244.69739 233.53994 245.97723 233.55865 C
247.16806 233.57282 250.35534 231.97408 252.85890 231.10214 C
305.32876 212.75773 359.44838 195.29433 412.60620 178.25783 C
421.83326 175.30413 430.87124 172.16306 440.37921 169.16740 C
450.73049 165.90444 465.34762 163.93550 471.10025 156.38769 C
472.94220 153.96860 473.79600 150.94006 475.03304 148.02888 C
478.47969 139.91839 484.25981 132.39865 487.81361 124.18980 C
490.04050 119.05143 492.26712 112.55386 493.46731 105.51231 C
@c
483.88025 178.99852 m
484.39077 178.68898 482.93773 177.80287 482.15962 177.27789 C
478.28268 174.63855 474.11433 171.53972 472.82088 165.97020 C
455.20724 174.37124 435.56457 178.67962 416.78334 184.89600 C
360.50740 203.52189 303.73937 221.96494 247.44898 240.44088 C
248.58397 242.12863 251.01694 243.54425 253.10324 245.11011 C
256.45011 247.61849 258.63506 250.88117 264.16233 249.77962 C
268.38198 248.94057 272.63849 246.24935 277.19065 244.61802 C
308.16000 233.52576 341.16888 223.61499 373.03909 213.40431 C
410.62847 201.36076 447.81449 189.97795 483.88025 178.99852 C
@c
269.32365 252.97228 m
266.93773 253.68009 264.14787 254.70680 260.96995 254.44885 C
259.95713 254.36466 258.98202 253.68945 258.02107 253.71298 C
256.36139 253.74586 254.48117 255.15666 252.61087 255.92088 C
250.52939 256.77893 248.43373 257.16331 246.95660 257.88983 C
242.96769 259.85424 240.20617 263.63764 236.88227 265.26444 C
236.78872 267.21468 236.17389 268.64929 236.14639 270.66983 C
250.37887 267.94602 260.81972 261.42491 269.32365 252.97228 C
@c
254.82387 250.51578 m
251.96854 247.93710 247.71175 245.28359 243.27213 242.16151 C
239.15594 239.26422 234.61285 233.72277 229.26416 234.05102 C
225.88894 234.25739 223.74142 237.13087 220.41780 237.97956 C
226.72800 240.06104 235.46183 240.37512 238.35912 245.84627 C
240.23849 249.40913 238.15276 254.38791 237.86674 259.11836 C
242.86904 255.60227 248.47597 252.68627 254.82387 250.51578 C
@c
231.72009 249.53131 m
229.77014 248.36854 227.74054 247.29024 225.08702 246.83074 C
216.16554 295.31991 208.92246 342.11707 195.83745 385.68841 C
182.81424 429.05820 168.02816 470.51036 153.56466 511.52655 C
146.20422 532.39833 139.24290 553.22277 131.68998 573.70507 C
109.08425 635.02611 86.14998 695.48825 63.12189 757.29628 C
66.00529 758.18268 69.39439 759.87014 71.96854 760.24517 C
72.17943 760.28769 72.20296 760.14680 72.21713 759.99657 C
97.27002 700.65468 119.24334 639.61058 142.01348 578.37430 C
149.60324 557.96258 157.48441 537.62060 163.88844 516.68362 C
173.56479 485.06230 183.60652 452.59228 193.87361 420.83518 C
197.25846 410.36173 200.44148 399.76668 204.44060 389.62176 C
208.49528 379.33625 210.38939 367.54072 212.79430 355.95156 C
219.97701 321.41452 226.75606 285.98117 231.72009 249.53131 C
@c
213.53499 245.11039 m
210.11301 245.45707 206.60655 245.71956 204.19625 247.07452 C
196.22239 295.21701 187.45087 340.55121 174.94781 383.96778 C
168.82469 405.22394 161.48806 425.97326 154.54970 446.64321 C
144.05244 477.90822 134.30580 508.84498 123.82838 540.27893 C
120.41972 550.49896 116.29417 560.41427 112.52069 570.50787 C
90.01786 630.73134 65.45169 689.28576 41.98791 748.93748 C
44.32734 750.69609 47.89502 751.22532 50.59077 752.62677 C
50.75461 752.62677 50.91392 752.62677 51.07833 752.62677 C
81.01191 670.81465 114.59707 591.95594 142.50586 508.82145 C
149.42523 488.21754 156.57024 467.21934 163.64409 446.15083 C
170.65757 425.26091 178.06989 404.42202 184.77865 383.48022 C
188.28992 372.52431 190.25376 360.81808 192.64535 349.31792 C
199.81814 314.79959 206.78457 280.13981 213.53499 245.11039 C
@c
F

@rax %Note: Object
33.48227 73.45020 561.79361 768.43956 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.01 0.01 0.01 1.00 (PANTONE Hexachrome Black C) ] set_fill_color
480.86986 73.45020 m
481.71061 73.45020 L
488.09594 73.49754 493.89052 74.61666 497.88765 77.49156 C
504.27014 82.08113 509.78353 87.71613 515.58718 92.73260 C
527.37789 102.91975 539.39820 112.70835 551.47011 122.71748 C
557.98668 128.11833 561.68561 135.08957 561.79332 145.32831 C
561.79361 145.35439 L
561.79361 146.36126 L
561.68674 156.90359 558.20636 163.51654 553.68283 170.14734 C
544.61622 183.44750 529.62378 191.14526 508.46117 189.31691 C
498.29613 188.44016 490.36394 184.55386 480.19521 187.59628 C
446.78721 197.59606 413.55865 208.39748 379.92132 219.05830 C
346.44302 229.66753 313.00809 240.03298 280.38274 251.49997 C
278.84551 252.03912 277.22353 254.87093 275.95786 256.41326 C
266.27641 268.22268 252.98107 274.71572 235.16135 278.53172 C
228.49512 312.37087 222.97209 347.48504 215.25534 379.79065 C
212.72910 390.35764 208.50973 400.34835 205.17619 410.26819 C
191.60447 450.70299 179.56091 491.90230 166.34438 533.15291 C
159.92220 553.19924 152.13515 572.70671 144.71830 592.38255 C
124.51294 645.99591 105.67616 700.80009 83.27622 753.11915 C
81.53688 757.17921 79.37546 764.59606 76.88636 767.12740 C
75.93902 768.08835 74.03131 768.66491 72.21713 768.35565 C
66.44580 767.36183 59.35266 763.74255 52.06252 760.98132 C
49.40929 759.97786 45.93515 758.66995 42.48000 757.29628 C
39.32504 756.03997 34.59940 755.27121 33.62882 752.62677 C
32.66334 749.98290 36.66699 741.70403 38.29833 737.63433 C
63.38466 675.13720 88.37688 613.84961 112.03313 551.09424 C
115.72271 541.29628 118.79773 531.24009 122.10803 521.10907 C
135.36595 480.53820 148.37528 440.87698 161.67515 400.68113 C
168.42189 380.29720 173.67250 359.38346 178.88031 337.76646 C
184.05666 316.29033 189.31153 294.17131 192.15298 270.91361 C
183.99997 266.19250 176.07742 262.40939 167.57263 258.13389 C
158.97940 253.81587 149.70671 251.27518 146.43865 241.91291 C
143.41521 233.24939 145.80624 221.38384 148.40362 213.40431 C
156.71537 187.88712 178.06989 176.64491 199.27843 165.47783 C
228.50929 150.09137 257.53805 136.03181 288.98589 123.45364 C
321.01994 110.63622 353.45650 100.57096 389.01628 91.74784 C
414.56154 85.40957 442.03408 78.36803 470.36381 74.29861 C
473.89776 73.79036 477.45921 73.47430 480.86986 73.45020 C
@c
196.82249 245.11039 m
185.64605 244.90885 179.17597 249.41849 169.54214 250.76409 C
177.37625 255.05376 185.78183 258.77140 193.62501 263.05172 C
195.22857 257.60409 195.86126 251.19524 196.82249 245.11039 C
@c
552.69836 156.63146 m
555.53017 148.60063 555.00009 137.08687 549.99326 131.31581 C
544.74265 125.26328 536.54315 122.00031 530.33131 116.57140 C
526.95609 113.61345 523.49613 110.99254 520.01291 108.21260 C
513.02296 102.64309 506.62828 96.70337 499.85717 91.50435 C
499.58957 112.71317 493.24677 127.20869 484.86472 140.90287 C
482.31439 145.07065 478.70872 150.37739 477.73871 155.15461 C
475.37121 166.78120 481.44699 171.00992 488.54948 175.06517 C
495.31465 178.92340 501.16507 181.55339 510.42557 182.19090 C
532.43178 183.70998 547.13820 172.40230 552.69836 156.63146 C
@c
493.46731 105.51231 m
494.71427 98.19411 495.58592 86.35181 491.74668 82.90148 C
487.11487 78.73370 471.59235 81.64517 464.21802 82.90148 C
401.89465 93.50589 344.88198 109.90970 291.93477 130.33587 C
276.44060 136.31329 262.28239 142.79669 248.18967 149.50545 C
234.13521 156.19550 220.17373 162.81496 206.16094 170.14734 C
186.23197 180.57827 164.21669 190.98595 155.77795 214.14047 C
153.68655 219.88346 150.33487 234.02268 153.81354 240.93326 C
155.17786 243.64743 157.49320 245.57896 161.92403 245.84627 C
173.11890 246.52148 181.21096 241.26123 191.90438 240.19228 C
194.75490 239.91109 198.23811 240.12198 200.99934 239.70019 C
206.46539 238.87049 211.08841 236.59654 215.49969 234.54312 C
221.53805 231.73030 227.73118 226.93436 236.63849 229.13320 C
238.18989 229.51757 240.00406 230.26309 241.55178 231.10214 C
242.87811 231.81931 244.69739 233.53994 245.97723 233.55865 C
247.16806 233.57282 250.35534 231.97408 252.85890 231.10214 C
305.32876 212.75773 359.44838 195.29433 412.60620 178.25783 C
421.83326 175.30413 430.87124 172.16306 440.37921 169.16740 C
450.73049 165.90444 465.34762 163.93550 471.10025 156.38769 C
472.94220 153.96860 473.79600 150.94006 475.03304 148.02888 C
478.47969 139.91839 484.25981 132.39865 487.81361 124.18980 C
490.04050 119.05143 492.26712 112.55386 493.46731 105.51231 C
@c
483.88025 178.99852 m
484.39077 178.68898 482.93773 177.80287 482.15962 177.27789 C
478.28268 174.63855 474.11433 171.53972 472.82088 165.97020 C
455.20724 174.37124 435.56457 178.67962 416.78334 184.89600 C
360.50740 203.52189 303.73937 221.96494 247.44898 240.44088 C
248.58397 242.12863 251.01694 243.54425 253.10324 245.11011 C
256.45011 247.61849 258.63506 250.88117 264.16233 249.77962 C
268.38198 248.94057 272.63849 246.24935 277.19065 244.61802 C
308.16000 233.52576 341.16888 223.61499 373.03909 213.40431 C
410.62847 201.36076 447.81449 189.97795 483.88025 178.99852 C
@c
269.32365 252.97228 m
266.93773 253.68009 264.14787 254.70680 260.96995 254.44885 C
259.95713 254.36466 258.98202 253.68945 258.02107 253.71298 C
256.36139 253.74586 254.48117 255.15666 252.61087 255.92088 C
250.52939 256.77893 248.43373 257.16331 246.95660 257.88983 C
242.96769 259.85424 240.20617 263.63764 236.88227 265.26444 C
236.78872 267.21468 236.17389 268.64929 236.14639 270.66983 C
250.37887 267.94602 260.81972 261.42491 269.32365 252.97228 C
@c
254.82387 250.51578 m
251.96854 247.93710 247.71175 245.28359 243.27213 242.16151 C
239.15594 239.26422 234.61285 233.72277 229.26416 234.05102 C
225.88894 234.25739 223.74142 237.13087 220.41780 237.97956 C
226.72800 240.06104 235.46183 240.37512 238.35912 245.84627 C
240.23849 249.40913 238.15276 254.38791 237.86674 259.11836 C
242.86904 255.60227 248.47597 252.68627 254.82387 250.51578 C
@c
231.72009 249.53131 m
229.77014 248.36854 227.74054 247.29024 225.08702 246.83074 C
216.16554 295.31991 208.92246 342.11707 195.83745 385.68841 C
182.81424 429.05820 168.02816 470.51036 153.56466 511.52655 C
146.20422 532.39833 139.24290 553.22277 131.68998 573.70507 C
109.08425 635.02611 86.14998 695.48825 63.12189 757.29628 C
66.00529 758.18268 69.39439 759.87014 71.96854 760.24517 C
72.17943 760.28769 72.20296 760.14680 72.21713 759.99657 C
97.27002 700.65468 119.24334 639.61058 142.01348 578.37430 C
149.60324 557.96258 157.48441 537.62060 163.88844 516.68362 C
173.56479 485.06230 183.60652 452.59228 193.87361 420.83518 C
197.25846 410.36173 200.44148 399.76668 204.44060 389.62176 C
208.49528 379.33625 210.38939 367.54072 212.79430 355.95156 C
219.97701 321.41452 226.75606 285.98117 231.72009 249.53131 C
@c
213.53499 245.11039 m
210.11301 245.45707 206.60655 245.71956 204.19625 247.07452 C
196.22239 295.21701 187.45087 340.55121 174.94781 383.96778 C
168.82469 405.22394 161.48806 425.97326 154.54970 446.64321 C
144.05244 477.90822 134.30580 508.84498 123.82838 540.27893 C
120.41972 550.49896 116.29417 560.41427 112.52069 570.50787 C
90.01786 630.73134 65.45169 689.28576 41.98791 748.93748 C
44.32734 750.69609 47.89502 751.22532 50.59077 752.62677 C
50.75461 752.62677 50.91392 752.62677 51.07833 752.62677 C
81.01191 670.81465 114.59707 591.95594 142.50586 508.82145 C
149.42523 488.21754 156.57024 467.21934 163.64409 446.15083 C
170.65757 425.26091 178.06989 404.42202 184.77865 383.48022 C
188.28992 372.52431 190.25376 360.81808 192.64535 349.31792 C
199.81814 314.79959 206.78457 280.13981 213.53499 245.11039 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
